// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package go0808

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MethodParam struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	X                    int32    `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MethodParam) Reset()         { *m = MethodParam{} }
func (m *MethodParam) String() string { return proto.CompactTextString(m) }
func (*MethodParam) ProtoMessage()    {}
func (*MethodParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *MethodParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodParam.Unmarshal(m, b)
}
func (m *MethodParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodParam.Marshal(b, m, deterministic)
}
func (m *MethodParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodParam.Merge(m, src)
}
func (m *MethodParam) XXX_Size() int {
	return xxx_messageInfo_MethodParam.Size(m)
}
func (m *MethodParam) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodParam.DiscardUnknown(m)
}

var xxx_messageInfo_MethodParam proto.InternalMessageInfo

func (m *MethodParam) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *MethodParam) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MethodParam) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type MethodReply struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Reply                int32    `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MethodReply) Reset()         { *m = MethodReply{} }
func (m *MethodReply) String() string { return proto.CompactTextString(m) }
func (*MethodReply) ProtoMessage()    {}
func (*MethodReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *MethodReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodReply.Unmarshal(m, b)
}
func (m *MethodReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodReply.Marshal(b, m, deterministic)
}
func (m *MethodReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodReply.Merge(m, src)
}
func (m *MethodReply) XXX_Size() int {
	return xxx_messageInfo_MethodReply.Size(m)
}
func (m *MethodReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodReply.DiscardUnknown(m)
}

var xxx_messageInfo_MethodReply proto.InternalMessageInfo

func (m *MethodReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *MethodReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MethodReply) GetReply() int32 {
	if m != nil {
		return m.Reply
	}
	return 0
}

func init() {
	proto.RegisterType((*MethodParam)(nil), "go0808.MethodParam")
	proto.RegisterType((*MethodReply)(nil), "go0808.MethodReply")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xcf, 0x37, 0xb0, 0x30, 0xb0, 0x50, 0x72,
	0xe4, 0xe2, 0xf6, 0x4d, 0x2d, 0xc9, 0xc8, 0x4f, 0x09, 0x48, 0x2c, 0x4a, 0xcc, 0x15, 0x12, 0xe3,
	0x62, 0xcb, 0x05, 0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x21, 0x1e, 0x2e,
	0xc6, 0x0a, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0xc6, 0x0a, 0x10, 0xaf, 0x52, 0x82, 0x19,
	0xc2, 0xab, 0x54, 0xf2, 0x84, 0x19, 0x11, 0x94, 0x5a, 0x90, 0x53, 0x29, 0x24, 0xc0, 0xc5, 0x9c,
	0x5b, 0x9c, 0x0e, 0xd5, 0x0f, 0x62, 0x0a, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x42, 0xf5,
	0x83, 0xd9, 0x42, 0x22, 0x5c, 0xac, 0x45, 0x20, 0xe5, 0x50, 0x63, 0x20, 0x9c, 0x24, 0x36, 0xb0,
	0xe3, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xda, 0x4c, 0x4a, 0xaa, 0x00, 0x00, 0x00,
}
